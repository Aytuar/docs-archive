<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//PUPPET//DTD DITA Puppet Concept//EN" "concept.dtd">
<concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="concept-9353" domains="(topic concept)                            (topic hi-d)                            (topic ut-d)                            (topic indexing-d)                             (topic pr-d)                            (topic sw-d)                            (topic ui-d)   " ditaarch:DITAArchVersion="1.2" class="- topic/topic concept/concept "><title class="- topic/title ">Creating modules</title><shortdesc class="- topic/shortdesc "> <ph conkeyref="ProductNames/pdk" class="- topic/ph ">PDK</ph> generates a complete new module with metadata, as well as creating classes, defined types, and tasks in your module. It also sets up infrastructure for validating and unit testing your module.</shortdesc><prolog class="- topic/prolog "><author type="creator" translate="no" class="- topic/author ">Jean Bond &lt;jean@puppet.com&gt;</author></prolog><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">To create your module's metadata, <ph conkeyref="ProductNames/pdk" class="- topic/ph ">PDK</ph> asks you a series of questions. Each question has a default response that <ph conkeyref="ProductNames/pdk" class="- topic/ph ">PDK</ph> uses if you skip the question. The answers you provide to these questions are stored and used as the new defaults for subsequent module creations. Optionally, you can skip the interview step and use the default answers for all metadata. For details about editing the <codeph translate="no" class="+ topic/ph pr-d/codeph ">metadata.json</codeph> file, read about module<xref href="https://puppet.com/docs/puppet/latest/modules_metadata.html" scope="external" class="- topic/xref "> metadata</xref>.</p><p class="- topic/p "> <ph conkeyref="ProductNames/pdk" class="- topic/ph ">PDK</ph> generates the empty module based on a default template, but you can specify your own custom template with command line options. To see the complete default module template, see the <xref href="https://github.com/puppetlabs/pdk-templates" scope="external" class="- topic/xref ">pdk-template</xref> project on <ph conkeyref="ProductNames/github" class="- topic/ph ">GitHub</ph>.</p><p class="- topic/p "> When you run the <codeph translate="no" class="+ topic/ph pr-d/codeph ">pdk new module</codeph> command, it requests the following information:</p><p class="- topic/p "> <ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p ">Your <ph conkeyref="ProductNames/puppet" class="- topic/ph ">Puppet</ph> <ph conkeyref="ProductNames/forge" class="- topic/ph ">Forge</ph> user name. If you don't have a <ph conkeyref="ProductNames/forge" class="- topic/ph ">Forge</ph> account, you can accept the default value for this question. If you create an account later, edit the module metadata manually with the correct value. </p></li><li class="- topic/li "><p class="- topic/p ">Module version. We use and recommend semantic versioning for modules.</p></li><li class="- topic/li "><p class="- topic/p ">Your name.</p></li><li class="- topic/li "><p class="- topic/p ">The license under which your module is made available. Use an identifier from <xref href="https://spdx.org/licenses" scope="external" class="- topic/xref ">SPDX License List</xref>.</p></li><li class="- topic/li "><p class="- topic/p "> A list of operating systems your module supports.</p></li><li class="- topic/li "><p class="- topic/p "> A one-sentence summary about your module. </p></li><li class="- topic/li "><p class="- topic/p "> The URL to your module's source code repository, so that other users can contribute back to your module.</p></li><li class="- topic/li "><p class="- topic/p ">The URL to a web site that offers full information about your module, if you have one.</p></li><li class="- topic/li "><p class="- topic/p ">The URL to the public bug tracker for your module, if you have one.</p></li></ul> After you create a module, validate and test the module <b class="+ topic/ph hi-d/b ">before</b> you add classes or write new code in it. This allows you to verify that the module files and directories were correctly created.</p><p class="- topic/p "> After you have validated the module, you can create classes, defined types, and tasks to your module by running <codeph translate="no" class="+ topic/ph pr-d/codeph ">pdk</codeph> commands. </p><p class="- topic/p ">The new class and defined type commands create manifest and a test file templates for the class or defined type.</p><p class="- topic/p "> The new task command creates task and task metadata templates. When you create a task, <ph conkeyref="ProductNames/pdk" class="- topic/ph ">PDK</ph> creates a task file in shell script (<codeph translate="no" class="+ topic/ph pr-d/codeph ">&lt;TASK&gt;.sh</codeph>), but you can write tasks in any language the target nodes will run. Be sure you use the correct extension for the language you write tasks in. For more information about tasks, see the <xref href="https://puppet.com/docs/bolt/latest/writing_tasks.html" scope="external" class="- topic/xref ">writing tasks</xref> documentation.</p></conbody></concept>